pool:
  vmImage: 'Ubuntu 16.04'

container:
  image: mlopscr.azurecr.io/public/mlops/mlopspython:latest
  endpoint: acrconnection

variables:
- group: AzureKeyVaultSecrets

trigger:
- master
- releases/*
- develop

steps:
- script: |
   flake8 --output-file=$(Build.BinariesDirectory)/flake8_amlservice_testresults.xml aml_service
   flake8 --output-file=$(Build.BinariesDirectory)/flake8_tests_testresults.xml tests
  workingDirectory: '$(Build.SourcesDirectory)/Code'
  displayName: 'Run code quality tests'
  

- script: |
   pytest --junitxml=$(Build.BinariesDirectory)/unittest-results.xml $(Build.SourcesDirectory)/Code/tests/unit/${{parameters.pipelineType}}
  displayName: 'Run unit tests'
  

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '$(Build.BinariesDirectory)/*_testresults.xml'
    testRunTitle: 'Unit tests'
    failTaskOnFailedTests: true
  displayName: 'Publish unit test results'
  

- script: | 
   az login --service-principal -u $(spidentity) -p $(spsecret) --tenant $(sptenant)
   
  displayName: 'Login to Azure'

- script: |
   sed -i 's#"subscription_id": "<>"#"subscription_id": "$(subscriptionid)"#g' aml_config/config.json
   
  displayName: 'replace subscription value'

- script: 'pytest tests/unit/data_test.py'
  displayName: 'Data Quality Check'

- script: 'python aml_service/00-WorkSpace.py'
  displayName: 'Get or Create Workspace'

- script: 'python aml_service/03-AttachAmlCluster.py'
  displayName: 'Create AML Compute Cluster'

- script: 'python aml_service/04-AmlPipelines.py'
  displayName: 'Create and Test AML Pipeline'

- script: 'python aml_service/04-AmlPipelines.py --pipeline_action publish'
  displayName: 'Publish AML Pipeline as Endpoint'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '**'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: devops-for-ai'
  inputs:
    ArtifactName: 'devops-for-ai'
    publishLocation: 'container'
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    TargetPath: '$(Build.ArtifactStagingDirectory)'

